import { Component, ViewChild } from '@angular/core';
import { IonicPage, NavController, NavParams, InfiniteScroll } from 'ionic-angular';
import { CommonProvider } from "../../providers/common/common";


/**
 * Generated class for the FootprintPage page.
 *
 * See https://ionicframework.com/docs/components/#navigation for more info on
 * Ionic pages and navigation.
 */

@IonicPage({
  name: 'footprint'
})
@Component({
  selector: 'page-footprint',
  templateUrl: 'footprint.html',
})
export class FootprintPage {
  @ViewChild(InfiniteScroll) infiniteScroll: InfiniteScroll;
  pet: string = "0";
  listArr = [];
  size = 10; //一次请求数据条数
  page1 = 1; //当前请求的页数
  page2 = 1; //当前请求的页数
  list = ""; //--------------------
  tabs: any = "0"; items = [[], []]; page = [0, 0]; res = []; params: any = {}; infiniteScrollState = [!0, !0];
  constructor(public navCtrl: NavController,
    public cp: CommonProvider,
    public navParams: NavParams) {
  }

  ionViewDidLoad() {
    // this.cp.setCache('list','');
    this.cp.getCache('list').then((t: any) => {
      this.list = t ? t : [];
      this.list = this.list.toString();
      // this.history();
      this.page[this.tabs] == 0 && this.doInfinite()
    });
  }
  goTo(url) {
    this.cp.goto(url);
  }
  getList() {
    this.history();
  }
  history() {
    this.cp.getData('goods/history', {
      size: this.size,
      page: 1,
      list: this.list
    }).then(
      (t: any) => {
        this.listArr = t.data;
      },
      err => {
        console.log(2);
      }
    )
  }

  getMore() {
    this.cp.getData('goods/history', {
      page: this.page1,
      size: this.size,
      list: this.list,
      silent: true
    }).then(
      (t: any) => {
        let arr = this.listArr;
        this.listArr = arr.concat(t.data);
      },
      err => {
        console.log(2);
      }
    )
  }
  showList(type) {
    // type:1 拼团商品     type:0  导购商品

  }
  // 上拉刷新
  // doInfinite(infiniteScroll) {
  // this.page++;
  // this.getMore();
  // setTimeout(() => {
  //   infiniteScroll.complete();
  // }, 500);
  // }

  changeSeg() {
    this.params.status = parseInt(this.tabs) - 1,
      0 == this.page[this.tabs] && this.doInfinite(),
      this.infiniteScroll.enable(this.infiniteScrollState[this.tabs])
  }

  doInfinite() {
    this.params.page = ++this.page[this.tabs];
    if (this.tabs == 1) {
      this.params.list = this.list;
      this.params.size = this.size;
      this.cp.getData("goods/history", this.params).then((e: any) => {
        this.res[this.tabs] = e.data ? e.data.list : [];
        this.items[this.tabs] = this.items[this.tabs].concat(this.res[this.tabs]);
        this.infiniteScroll.complete();
        Math.ceil(this.res[this.tabs].num / this.res[this.tabs].per_page) <= this.page[this.tabs] && (this.infiniteScrollState[this.tabs] = !1, this.infiniteScroll.enable(this.infiniteScrollState[this.tabs]));
      })
    } else {
      this.cp.getData("withdraw/getlist", this.params).then(e => {
        this.res[this.tabs] = e;
          this.items[this.tabs] = this.items[this.tabs].concat(this.res[this.tabs]);
          this.infiniteScroll.complete();
        Math.ceil(this.res[this.tabs].num / this.res[this.tabs].per_page) <= this.page[this.tabs] && (this.infiniteScrollState[this.tabs] = !1, this.infiniteScroll.enable(this.infiniteScrollState[this.tabs]));
      })
    }
  }
}
