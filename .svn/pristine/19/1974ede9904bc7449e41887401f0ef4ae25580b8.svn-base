import { Component, ViewChild } from '@angular/core';
import { IonicPage, NavController, NavParams, Slides } from 'ionic-angular';
import { CommonProvider } from "../../providers/common/common";
import { WechatApi } from '../../providers/common/wechatApi';

/**
 * Generated class for the CollageDetailPage page.
 *
 * See https://ionicframework.com/docs/components/#navigation for more info on
 * Ionic pages and navigation.
 */

@IonicPage({
  name: 'collage-detail',
  segment: 'collage-detail/:goods_id/:team_id',
})
@Component({
  selector: 'page-collage-detail',
  templateUrl: 'collage-detail.html',
})
export class CollageDetailPage {
  @ViewChild(Slides) slides: Slides;
  pet = '0';
  current = 1; //当前所在轮播图
  slideLen = 1;  //轮播图数量
  tipsState: boolean = false; //服务说明状态 false隐藏  true显示
  ruleState: boolean = false; //拼团规则状态 false隐藏  true显示
  isCollect: boolean = false; //收藏 true已收藏   false未收藏
  buyInfoState: boolean = false; //购买明细框 false隐藏  true显示
  buyState = 1; //购买方式  1：单独购买   2：拼团购买
  goodsId = null; //商品id
  teamId = 0; //拼团队伍id
  tId = 0;//goodinfoid
  goodDeatil = {};
  goodInfo: any = {};
  goodImg = [];
  goodPro = {};
  teamLog = '';//已有拼团列表
  difftimeArr = [];//剩余时间戳数组
  difftime = [];//剩余时间数组
  shopImg = '';//商店图片
  newGoods = [];
  newLen = 7; // 拼团新品数量
  pro = {}; //个人团信息
  teamPro = {}; //多人团信息
  // 购买商品 参数选项
  goodsParam = [];
  attrId = [];//选择的商品参数
  chooseAttr = []; //选择的商品参数名
  chooseAttrIndex = []; //选择的商品参数index
  chooseNum = 1;//已选数量
  goodNum = 1;//库存数量
  astrictNum = 1; //限购数量
  bigNum = 1;//最大购买数量
  grey: boolean = true; // 减数量的按钮是否置灰
  grey2: boolean = false; // 加数量的按钮是否置灰
  flowType = null; //
  temp: any = {}; //跳转页面所带参数
  parameteCont = [];//商品规格参数
  stock = 0;//库存
  cartId = '';
  disabled = 0;

  constructor(
    public navCtrl: NavController,
    public cp: CommonProvider,
    public navParams: NavParams,
    public api: WechatApi
  ) {}

  ionViewDidLoad() {
    this.goodsId = this.navParams.get('goods_id');
    this.teamId = this.navParams.get('team_id') ? this.navParams.get('team_id') : 0;
    this.getList();
  }
  ionViewWillEnter(){
    this.disabled = 0;
  }
  gotoRoot() {
    this.cp.gotoRoot();
    this.navCtrl.parent.select(3)
  }
  goTo(url) {
    this.cp.goto(url);
  }
  // 加入浏览记录
  save() {
    this.cp.getCache('list').then((t: any) => {
      let list: any = t ? t : '';
      if (list == '') {
        this.cp.setCache('list', this.goodsId);
      } else {
        this.cp.getData('goods/save', {
          list: list,
          goodsId: this.goodsId,
          silent: true
        }).then(
          (t: any) => {
            this.cp.setCache('list', t.data);
          },
          err => {
            console.log(2);
          }
        )
      }
    });
  }
  slideChanged() {
    let currentIndex = this.slides.getActiveIndex();
    if (currentIndex < this.slideLen) {
      this.current = currentIndex + 1;
    }
  }
  // 显隐服务说明
  showTips() {
    this.tipsState = !this.tipsState;
  }
  // 显隐拼团规则详情
  switchRule() {
    this.ruleState = !this.ruleState;
  }
  switchCollect(id) {
    this.cp.getData('user/collect/add', {
      id: this.goodsId,
      silent: true
    }).then(
      (t: any) => {
        if (t.code == 0) {
          this.isCollect = !this.isCollect;
          if (t.data === 1) {
            this.isCollect = false;
          }
        }
      },
      err => {
        console.log(2);
      }
    )

  }
  // 显隐购买明细框
  showBuy(num) {
    this.buyInfoState = !this.buyInfoState;
    if (num) {
      this.buyState = num;
      if (this.buyState == 1) {
        this.bigNum = this.goodNum;
      } else {
        this.bigNum = this.astrictNum;
      }
    } else {
      this.chooseNum = 1;
      this.grey = this.chooseNum <= 1 ? true : false;
      this.grey2 = this.chooseNum >= this.bigNum ? true : false;
    }
  }
  // 去参团
  groupBuy(temp) {
    this.teamId = temp && temp.team_id ? temp.team_id : 0;
    this.showBuy(2);
  }
  // 选择商品属性
  choseStyle(name, val, arrIndex) {
    this.attrId[name] = val;
    this.chooseAttr[name] = name;
    this.chooseAttrIndex[name] = arrIndex;
    this.buyState == 2 ? this.teamProperty() : this.property();
  }
  // 减少数量
  reduce() {
    if (this.chooseNum > 1) {
      this.chooseNum--;
      this.grey2 = false;
    }
    if (this.chooseNum <= 1) {
      this.grey = true;
    }
    this.buyState == 2 ? this.teamProperty() : this.property();
  }
  // 添加数量
  add() {
    if (this.chooseNum < this.bigNum) {
      this.chooseNum++;
      this.grey = false;
    }
    if (this.chooseNum >= this.bigNum) {
      this.grey2 = true;
    }
    this.buyState == 2 ? this.teamProperty() : this.property();
  }

  inputKeyUp($event) {
    $event.target.value = $event.target.value.replace(/[^\d]/g, '');
    $event.target.value = Math.floor($event.target.value);
    $event.target.value = $event.target.value <= 0 ? 1 : $event.target.value;
    this.chooseNum = $event.target.value <= this.bigNum ? $event.target.value : this.bigNum;
    this.grey = this.chooseNum <= 1 ? true : false;
    this.grey2 = this.chooseNum >= this.bigNum ? true : false;
    this.buyState == 2 ? this.teamProperty() : this.property();
  }
  getList() {
    this.cp.getData('team/goodsDetail', {
      goods_id: this.goodsId,
      team_id: this.teamId
    }).then(
      (t: any) => {
        // t.error 商品已下架：1    正常状态：0
        if (t.code == 1) {
          this.cp.toast(t.data.msg);
          this.cp.pop();
          return false;
        }
        this.save();
        this.goodDeatil = t.data;
        this.goodImg = t.data.goods_img;
        this.slideLen = this.goodImg.length;
        this.goodInfo = t.data.goods_info;
        this.isCollect = 1 == t.data.goods_info.is_collect;
        this.teamLog = t.data.team_log;
        if (t.data.team_log != '') {
          let team_log = t.data.team_log;
          for (const item in team_log) {
            this.difftimeArr[this.difftimeArr.length] = team_log[item].end_time;
          }
          this.timeEnd();
        }
        this.tId = t.data.goods_info.id;
        this.goodPro = t.data.goods_properties ? t.data.goods_properties.pro : [];
        this.shopImg = t.data.detail.sellershopinfo.logo_thumb;
        this.newGoods = t.data.new_goods;
        this.newLen = this.newGoods.length;
        this.astrictNum = t.data.goods_info.astrict_num;
        this.goodNum = t.data.goods_info.goods_number;
        var pro = this.goodPro, proArr = [];
        for (var i in pro) {
          proArr.push(pro[i]);
          this.chooseAttr[this.chooseAttr.length] = this.chooseAttr.length;
          this.chooseAttrIndex[this.chooseAttrIndex.length] = 0;
          this.attrId[this.attrId.length] = pro[i].values[0].id;
        }
        this.goodsParam = proArr;

        let spe = t.data.goods_properties.spe, arr = [];
        for (const list in spe) {
          for (const key in spe[list]) {
            arr.push(spe[list][key]);
          }
        }
        this.parameteCont = arr;
        this.property();
        this.teamProperty();
        if (this.cp.isWechat()) {
          this.api.register(this.shareConfig())
        }
      },
      err => {
        console.log(2);
      }
    )
  }
  //个人团
  property() {
    this.cp.getData('goods/property', {
      id: this.goodsId,
      attr_id: this.attrId,
      num: this.chooseNum,
      groupNum: this.chooseNum,
      warehouse_id: "1",
      area_id: "1",
      silent: true
    }).then(
      (t: any) => {
        this.pro = t.data;
        this.stock = t.data.stock;
        this.bigNum = this.stock;
        this.chooseNum = this.chooseNum > this.stock ? this.stock : this.chooseNum;
        this.grey2 = this.chooseNum >= this.bigNum ? true : false;
      },
      err => {
        console.log(2);
      }
    )
  }
  //多人团
  teamProperty() {
    this.cp.getData('team/teamProperty', {
      goods_id: this.goodsId,
      attr_id: this.attrId,
      num: this.chooseNum,
      warehouse_id: "1",
      area_id: "1",
      silent: true
    }).then(
      (t: any) => {
        this.teamPro = t.data;
        this.stock = t.data.stock;
        this.bigNum = this.stock;
        this.chooseNum = this.chooseNum > this.stock ? this.stock : this.chooseNum;
        this.grey2 = this.chooseNum >= this.bigNum ? true : false;
      },
      err => {
        console.log(2);
      }
    )
  }
  // 个人购买添加到购物车-提交订单
  addCart() {
    this.cp.getData('cart/add', {
      id: this.goodsId,
      num: this.chooseNum,
      attr_id: JSON.stringify(this.attrId),
      silent: true
    }).then(
      (t: any) => {
        if (typeof t.data == "string") {
          this.buyInfoState = false;
          this.cp.toast(t.data);
          return false;
        }
        this.flowType = 0;
        this.cartId = t.data.rec_id;
        this.buy();
      },
      err => {
        console.log(2);
      }
    )
  }
  // 多人团购买-提交订单
  teamBuy() {
    this.cp.getData('team/teamBuy', {
      goods_id: this.goodsId,
      t_id: this.tId,
      team_id: this.teamId,
      num: this.chooseNum,
      attr_id: JSON.stringify(this.attrId),
      silent: true
    }).then(
      (t: any) => {
        if (typeof t.data == "string") {
          this.buyInfoState = false;
          this.cp.toast(t.data);
          return false;
        }
        this.flowType = t.data.flow_type;
        this.teamId = t.data.team_id;
        this.tId = t.data.t_id;
        this.buy();
      },
      err => {
        console.log(2);
      }
    )
  }

  // 个人地址信息-提交订单
  buy() {
          //去确认订单页面
          // ?objectId=0&flow_type=" + a + "&team_id=" + r + "&t_id=" + o
          this.temp = {
            view: 'firm-order',
            objectId: 0,
            flow_type: this.flowType,
            team_id: this.teamId,
            t_id: this.tId
          };
          this.buyState == 2 ? this.teamProperty() : this.property();
          if (this.buyState != 2) {
            this.temp.cartId = JSON.stringify(this.cartId);
          }

          this.buyInfoState = false;
          this.goTo(this.temp);//跳转至订单详情页面
  }

  // 多人团到订单页面
  firmOrder() {
    if(this.disabled) return;

    this.disabled = 1;
    this.buyState == 2 ? this.teamBuy() : this.addCart();
  }
  // 倒计时
  timeEnd() {
    let that = this;
    let timer = null;
    timer = setInterval(() => {
      let a = that.difftimeArr.length;
      for (var t = 0; t < a; t++) {
        var r = that.difftimeArr[t] - new Date().getTime() / 1e3, i = 0, s: any = 0, d: any = 0, n: any = 0;
        if (r > 0) {
          i = Math.floor(r / 86400);
          s = Math.floor(r / 3600) - 24 * i;
          d = Math.floor(r / 60) - 24 * i * 60 - 60 * s;
          n = Math.floor(r) - 24 * i * 60 * 60 - 60 * s * 60 - 60 * d, s <= 9 && (s = "0" + s);
          d <= 9 && (d = "0" + d), n <= 9 && (n = "0" + n);
          u = s + ":" + d + ":" + n;
        } else {
          var u = "已结束！";
          clearInterval(timer);
        }
        that.difftime[t] = u;
      }
    }, 1e3);
  }
  distinct(a) {
    // 数组去重
    var arr = a, i, j, len = arr.length;
    for (i = 0; i < len; i++) {
      for (j = i + 1; j < len; j++) {
        if (arr[i] == arr[j]) {
          arr.splice(j, 1);
          len--;
          j--;
        }
      }
    }
    return arr;
  }

  /*-----------------------分享商品-----------------------*/
  shareConfig() {
    let msg = this.goodInfo.goods_name, t;
    t = {
      message: msg,
      title: msg,
      pic: this.goodImg[0],
      url: this.cp.getShareUrl("#/collage-detail/" + this.goodsId),
      type:'url'
    }
    return t;
  }
  share() {
    if (this.cp.isWechat()) {
      this.cp.toast("请点击右上角 ··· 进行分享");
    } else if (this.cp.plt.is("cordova")) {
      this.cp.share(this.shareConfig())
    } else
      this.cp.goto({ view: "download" })
  }
}
